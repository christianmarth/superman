version: "3.7"

services:
  frontend: 
    build:
      context: ./frontend
      dockerfile: ./frontendDockerfile
    ports:
      - "3000:3000"
    depends_on:
      - web
    volumes:
      - ./frontend:/frontend
  web:
    build: 
      context: ./backend
      dockerfile: ./backendDockerfile
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
      PGPORT: 5432
      PGHOST: db
    ports:
      - "8000:8000"
    depends_on:
      - db
      - es
      - graphql-engine
    volumes:
      - ./backend:/backend
    command: ["./wait-for-it.sh", "python", "manage.py", "runserver", "0.0.0.0:8000"]
  db:
    image: "postgis/postgis"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
  es:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.6.1"
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    image: "docker.elastic.co/kibana/kibana:7.6.1"
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://es:9200/"
  graphql-engine:
      image: hasura/graphql-engine:v1.2.0-beta.2
      ports:
      - "8080:8080"
      depends_on:
      - "db"
      restart: always
      environment:
        HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
        HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
        ## uncomment next line to set the admin secret key
        # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
volumes:
  pgdata:
